var random_color = require('lib/util/random_color');
var test = require('tape');
var check = require('check-types');

test('[random_color] incorrect, bad argument type', function (t) {
	t.plan(2);
	try {
		random_color(0);
	} catch(error) {
		t.ok(check.instanceStrict(error, TypeError), 'we should get back a TypeError');
		var message = error.toString();
		t.ok(message.match(/string or undefined/), 'argument should be string or undefined');
	}
});

test('[random_color] correct, no argument', function (t) {
	t.plan(1);
	var result = random_color();
	t.ok(result.match(/(^#[0-9A-F]{3}$)/i), 'should be hex color of the form: #(hex)(hex)(hex)');
});

test('[random_color] incorrect, not color', function (t) {
	t.plan(2);
	try {
		random_color("some bad input");
	} catch(error) {
		t.ok(check.instanceStrict(error, TypeError), 'we should get back a TypeError');
		var message = error.toString();
		t.ok(message.match(/valid CSS color/), 'argument should be valid CSS color');
	}
});

test('[random_color] correct, high contrast color', function (t) {
	var result = random_color("#000");
	var contrast = require('wcag-contrast');
	
	t.plan(1);
	t.ok(contrast.score(contrast.hex(result, "#000")) === 'AA' || contrast.score(contrast.hex(result, "#000")) === 'AAA',
		'randomly chosen color should have good contrast with #000');
});

test('[random_color] correct, null', function (t) {
	var result = random_color(null);
	var contrast = require('wcag-contrast');
	
	t.plan(1);
	t.ok(result.match(/(^#[0-9A-F]{3}$)/i), 'should be hex color of the form: #(hex)(hex)(hex)');
});