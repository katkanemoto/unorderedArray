var check = require('check-types');

function array_delete(options) {
	if (!(this instanceof array_delete)) return new array_delete(options);
	
	this._state = this._INIT;
	
	//requires arguments
	var validate = require('lib/lesson/util/array_lesson_argument_validate.js');
	var result = validate(options);
	
	if (!result.valid) {
		throw new TypeError(result.msg);
	}
	
	this._UI = options.UI;
	this._array = options.array;
	this._arrow = options.arrow;
	
	//require a valid index in the array, where we can delete from
	if(
		check.not.integer(options.index) ||
		(options.index > (this._array._.length-1)) ||
		(options.index < 0) ||
		check.undefined(this._array._.values[options.index])
		){
		throw new TypeError("Required argument: index, should be an integer index in the array, with a valid value at that index.");
	}
	this._index = options.index;
	
	this._state = this._READY;
};

array_delete.prototype = {
	//METHODS
	
	next: function() {
		//start by stating what we're going to do
	},
	
	//PROPERTIES
	//PRIVATE
	
	//state and constants associated
	_DONE : 3,					//if we can no longer run the lesson, then set this state which makes the lesson unresponsive
	_RUN : 2,					//currently traversing the lesson
	_READY : 1,					//ready to start the lesson, done with all of the setup, not currently in the lesson
	_INIT : 0,					//initial state, setting up object for lesson, should not be able to interact at this step
	_state : undefined,			//tracks the state of the lesson
	
	//states for when stepping through a lesson
	_step_state : undefined,
	
	_UI : 			undefined,	//holds a reference to the required argument UI (the proxy to control the UI)
	_array :		undefined,	//holds a reference to the required array (the UI component to traverse during the lesson)
	_arrow :		undefined,	//holds a reference to the required arrow (the "tail" arrow of the array)
};

module.exports = array_delete;